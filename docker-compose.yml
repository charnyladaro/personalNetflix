version: '3.8'

services:
  # Your Flask application
  flask-app:
    build: .
    container_name: personal-netflix-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./netflix.db:/app/netflix.db
    environment:
      - FLASK_ENV=production
      - UPLOAD_FOLDER=/app/uploads/videos
      - THUMBNAIL_FOLDER=/app/uploads/thumbnails
      - TRUSTED_PROXIES=172.16.0.0/12,192.168.0.0/16,10.0.0.0/8
    networks:
      - netflix-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: personal-netflix-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: netflix_secure_password_123
      POSTGRES_DB: netflix_streaming
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - netflix-network

  # Nginx reverse proxy (optional for now)
  nginx:
    image: nginx:alpine
    container_name: personal-netflix-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./uploads:/var/www/uploads:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - flask-app
    networks:
      - netflix-network
    profiles:
      - nginx

  # Optional: Redis for caching (can add later)
  redis:
    image: redis:alpine
    container_name: personal-netflix-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - netflix-network
    profiles:
      - redis

networks:
  netflix-network:
    driver: bridge

volumes:
  redis-data:
  postgres_data: 